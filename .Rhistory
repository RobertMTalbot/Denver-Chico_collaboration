select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1) %>%
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
library(dplyr)
library(nlme)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
LGcoursefit_inp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
View(lvl1_inp)
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100 | PRE.score == NA)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_inp_ <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
# filter(PRE.score < 100)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)%>%
filter(PRE.score < 100)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
#Multiple Linear Regression by gender and race
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
?gls
View(lvl1_inp)
boxplot(lvl1_inp$PRE.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
boxplot(lvl1_inp$CohensD ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100 | PRE.score == NA)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
boxplot(lvl1_inp$PRE.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
library(dplyr)
library(nlme)
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100 | PRE.score == NA)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
boxplot(lvl1_inp$PRE.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)%>%
filter(PRE.score < 100)
#filter("PRE.Duration..Seconds." > 300)
#filter("POST.Duration..Seconds." > 300)
# "|" is an or, "," is an and
#filter(Instrument == 7 | Instrument == 8)
##filter(`Effect.size` > -2) # %>% # remove the previous # to add steps
## filter(FCI == 1, FMCE == 1) %>%
## filter(FMCE == 1)
## filter(numstudent > 10) %>%
#delete courses and students with <10 students (uses 2 datasets)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
#Multiple Linear Regression by gender and race
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
boxplot(lvl1_inp$CohensD ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
#multidimension outlier analysis
library(mvoutlier)
library(plot3D)
scatter3D(x = lvl1_inp$LGind, y = lvl1_inp$LGcourse, z = lvl1_inp$CohensD, colvar = lvl1_inp$CohensD,
pch = 16, cex = 1.5, xlab = "LG individual", ylab = "LG Course",
zlab = "Cohen's d",
ticktype = "detailed",
panel.first = NULL, theta = 10, d = 2,
colkey = list(length = 0.5, width = 0.5, cex.clab = 0.75))
?scatter3D
par(mfrow = c(1, 1))
# surface = volcano
M <- mesh(1:nrow(volcano), 1:ncol(volcano))
# 100 points above volcano
N  <- 100
xs <- runif(N) * 87
ys <- runif(N) * 61
zs <- runif(N)*50 + 154
# scatter + surface
scatter3D(xs, ys, zs, ticktype = "detailed", pch = 16,
bty = "f", xlim = c(1, 87), ylim = c(1,61), zlim = c(94, 215),
surf = list(x = M$x, y = M$y, z = volcano,
NAcol = "grey", shade = 0.1))
install.packages("rgl")
library(rgl)
?rgl
example(plot3d)
?plot3d
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD))
?rainbow
length(unique(lvl1_inp$CohensD))
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD), col=heat.colors(length(unique(lvl1_inp$CohensD))))
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD), col=rainbow(length(unique(lvl1_inp$CohensD))))
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD), col=rainbow(1000))
thingiwant <- aq.plot(lvl1_3d, alpha=0.1, quan=0.9)
lvl1_3d <- lvl1_inp %>%
ungroup() %>%
select(CohensD,LGind,LGcourse)
thingiwant <- aq.plot(lvl1_3d, alpha=0.1, quan=0.9)
show(thingsiwant)
str(thingiwant)
str(thingiwant$outliers)
lvl1_inp$outliers <- thingiwant$outliers
View(lvl1_inp)
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD), col=outliers)
levels(factor(thingiwant$outliers, labels=c(1,2)))
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD), col=factor(outliers, labels=c(1,2)))
plot3d(lvl1_inp$LGind, lvl1_inp$LGcourse, lvl1_inp$CohensD), col=factor(outliers, labels=c(1,2))
plot3d(lvl1_inp$LGind, lvl1_inp$LGcourse, lvl1_inp$CohensD, col=factor(outliers, labels=c(1,2)))
plot3d(lvl1_inp$LGind, lvl1_inp$LGcourse, lvl1_inp$CohensD, col=factor(lvl1_inp$outliers, labels=c(1,2)))
with(lvl1_inp, plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
with(filter(lvl1_inp, LGind>-2, plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
with(filter(lvl1_inp, LGind>-2), plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
with(filter(lvl1_inp, LGind>-2), plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
plot(lvl1_clean2$CohensD, lvl1_clean2$LGcourse)
plot(lvl1_clean2$CohensD, lvl1_clean2$LGind)
with(lvl1_inp, plot(CohensD, LGcourse))
with(lvl1_inp, plot(LGind, LGcourse))
with(lvl1_inp, plot(CohensD, LGind))
library(dplyr)
library(nlme)
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
library(Amelia)
lvl1_inptest <- lvl1_inp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, Year_in_school, gender, race, instrument)
bds <- matrix(c("PRE.score", "POST.score", 0, 0, 1, 1), nrow = 2, ncol = 3)
bds
View(lvl1_inptest)
bds <- matrix(c(2, 3, 0, 0, 1, 1), nrow = 2, ncol = 3)
bds
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
a.out <- Amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
library(Amelia)
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
install.packages("Amelia")
library(Amelia)
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
save(a.out, file ="lvl1_imps.RData")
load("~/Denver-Chico_collaboration/lvl1_imps.RData")
load("~/Denver-Chico_collaboration/lvl1_imps.RData")
lvl1_imp <- data.frame(a.out$imputations[[5]])
View(lvl1_imp)
lvl1_imp <- data.frame(a.out$imputations[[1]])
a.out <- amelia(lvl1_inptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp <- data.frame(a.out$imputations[[1]])
View(lvl1_inp)
View(lvl1_inptest)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_inptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp <- data.frame(a.out$imputations[[1]])
View(lvl1_imp)
lvl1_imp <- data.frame(a.out$imputations[[5]])
library(dplyr)
library(nlme)
lvl1_imp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_imp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_imp$row <- 1:nrow(lvl1_imp)
#turn dummy variable in a single factor
lvl1_imp$gender <- factor(lvl1_imp$male*1 + lvl1_imp$female*2 + lvl1_imp$transgender*3 + lvl1_imp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_imp$instrument <- factor(lvl2_imp$PCA*1 + lvl2_imp$IMCA*2 + lvl2_imp$GCA*3 + lvl2_imp$CINS*4 + lvl2_imp$GCIICS*5 + lvl2_imp$CCI*6 + lvl2_imp$FMCE*7 + lvl2_imp$BEMA*8 + lvl2_imp$FCI*9 + lvl2_imp$CSEM*10 + lvl2_imp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_imp$race <- factor(lvl1_imp$white*1 + lvl1_imp$black*2 + lvl1_imp$asian*3 + lvl1_imp$american_indian*4 + lvl1_imp$hawaiian_or_other_pacific_islander*5 + lvl1_imp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_imp$race_URM <- factor(lvl1_imp$white*1 + lvl1_imp$black*2 + lvl1_imp$asian*2 + lvl1_imp$american_indian*2 + lvl1_imp$hawaiian_or_other_pacific_islander*2 + lvl1_imp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_imp$gender_URM <- factor(lvl1_imp$male*1 + lvl1_imp$female*2 + lvl1_imp$transgender*2 + lvl1_imp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_imp into lvl1_imp
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_imp <- lvl1_imp %>%
filter(Student.or.LA == 0)
#filter(PRE.Duration..Seconds.>300 | PRE.Duration..Seconds.==NA)
#filter(PRE.score < 100 | PRE.score == NA)
#select variables we'll be using
variable.names(lvl1_imp)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, Year_in_school, gender, race, instrument)
#New imputation code
library(Amelia)
?amelia
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
bds
a.out <- amelia(lvl1_imptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp_po <- lvl1_imp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument))
NApost <- filter(lvl1_imp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_imp_po$row)
lvl1_imp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_imp_popre <- lvl1_imp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) #predicting the pre
NApre <- filter(lvl1_imp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_imp_popre$row)
lvl1_imp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_imp <- lvl1_imp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_imp <- lvl1_imp %>%
filter(CohensD < 4 , CohensD > -1)%>%
filter(PRE.score < 100)
#filter("PRE.Duration..Seconds." > 300)
#filter("POST.Duration..Seconds." > 300)
# "|" is an or, "," is an and
#filter(Instrument == 7 | Instrument == 8)
##filter(`Effect.size` > -2) # %>% # remove the previous # to add steps
## filter(FCI == 1, FMCE == 1) %>%
## filter(FMCE == 1)
## filter(numstudent > 10) %>%
#delete courses and students with <10 students (uses 2 datasets)
x <- lvl1_imp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_imp <- lvl1_imp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_imp <- lvl2_imp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_imp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_imp_inst)
LGindfit_imp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_imp_inst)
LGcoursefit_imp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_imp_inst)
#Multiple Linear Regression by gender and race
library(mvoutlier)
lvl1_3d <- lvl1_imp %>%
ungroup() %>%
select(CohensD,LGind,LGcourse)
thingiwant <- aq.plot(lvl1_3d, alpha=0.1, quan=0.9)
lvl1_imp$outliers <- thingiwant$outliers
library(rgl)
with(filter(lvl1_imp, LGind>-2), plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
