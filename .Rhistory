View(combo)
library(dplyr)
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
filter(PRE.score < 100)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- postpred <- gls(POST.score ~ PRE.score + gender + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
library(nlme)
postpred <- gls(POST.score ~ PRE.score + gender + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
postpred <- gls(POST.score ~ PRE.score + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
install.packages("nlme")
library(dplyr)
library(nlme)
install.packages("dplyr")
library(dplyr)
library(nlme)
postpred <- gls(POST.score ~ PRE.score + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
View(lvl1_inp_po)
unique(lvl1_inp_po$instrument)
library(nlme)
library(dplyr)
library(nlme)
postpred <- gls(POST.score ~ PRE.score + instrument, data=lvl1_inp_po, weights=varIdent(form= ~1|instrument))
View(lvl1)
lvl1$gender <- factor(lvl1$male*1 + lvl1$female*2 + lvl1$transgender*3 + lvl1$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2$instrument <- factor(lvl2$PCA*1 + lvl2$IMCA*2 + lvl2$GCA*3 + lvl2$CINS*4 + lvl2$GCIICS*5 + lvl2$CCI*6 + lvl2$FMCE*7 + lvl2$BEMA*8 + lvl2$FCI*9 + lvl2$CSEM*10 + lvl2$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1$race <- factor(lvl1$white*1 + lvl1$black*2 + lvl1$asian*3 + lvl1$american_indian*4 + lvl1$hawaiian_or_other_pacific_islander*5 + lvl1$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1$race_URM <- factor(lvl1$white*1 + lvl1$black*2 + lvl1$asian*2 + lvl1$american_indian*2 + lvl1$hawaiian_or_other_pacific_islander*2 + lvl1$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1$gender_URM <- factor(lvl1$male*1 + lvl1$female*2 + lvl1$transgender*2 + lvl1$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2 into lvl1
lvl1 <- left_join(lvl1, lvl2[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1 <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(PRE.score < 100)
#Calculate Cohen's d, LGcourse, and LGind
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
fit.equation <- gls(POST.score ~ PRE.score + gender + instrument, data=lvl1, weights=varIdent(form= ~1|instrument)) #"*" is interaction effect and the terms indepedantly
fit.equation <- gls(POST.score ~ instrument, data=lvl1, weights=varIdent(form= ~1|instrument)) #"*" is interaction effect and the terms indepedantly
fit.equation <- gls(POST.score ~ PRE.score + gender, data=lvl1, weights=varIdent(form= ~1|instrument)) #"*" is interaction effect and the terms indepedantly
View(combo)
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0) %>%
filter(PRE.score < 100)
library(dplyr)
library(nlme)
#BVD read in (laptop)
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0) %>%
filter(PRE.score < 100)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
summary(prepred)
View(lvl1_inp_popre)
View(lvl1_inp_popre)
lvl1 <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2 <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0) %>%
filter(PRE.score < 100)
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
View(lvl1_inp)
View(lvl1_inp)
lvl1 <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2 <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1$row <- 1:nrow(lvl1)
#turn dummy variable in a single factor
lvl1$gender <- factor(lvl1$male*1 + lvl1$female*2 + lvl1$transgender*3 + lvl1$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2$instrument <- factor(lvl2$PCA*1 + lvl2$IMCA*2 + lvl2$GCA*3 + lvl2$CINS*4 + lvl2$GCIICS*5 + lvl2$CCI*6 + lvl2$FMCE*7 + lvl2$BEMA*8 + lvl2$FCI*9 + lvl2$CSEM*10 + lvl2$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1$race <- factor(lvl1$white*1 + lvl1$black*2 + lvl1$asian*3 + lvl1$american_indian*4 + lvl1$hawaiian_or_other_pacific_islander*5 + lvl1$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1$race_URM <- factor(lvl1$white*1 + lvl1$black*2 + lvl1$asian*2 + lvl1$american_indian*2 + lvl1$hawaiian_or_other_pacific_islander*2 + lvl1$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1$gender_URM <- factor(lvl1$male*1 + lvl1$female*2 + lvl1$transgender*2 + lvl1$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2 into lvl1
lvl1 <- left_join(lvl1, lvl2[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1 <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(PRE.score < 100)
#Calculate Cohen's d, LGcourse, and LGind
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit()
View(lvl1)
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit()
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
?mean
library(dplyr)
library(nlme)
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100 | PRE.score == NA)
#replace NA with calculated value (course average or MLR prediction)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
#predicting the pre
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score))
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score)),
PREave=mean(PRE.score)
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score),
PREave=mean(PRE.score))
View(lvl1_inp)
lvl1 <- lvl1 %>%
filter(CohensD < 4 , CohensD > -1) %>%
x <- lvl1 %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1 <- lvl1 %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
x <- lvl1 %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1 <- lvl1 %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1) %>%
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
library(dplyr)
library(nlme)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
LGcoursefit_inp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
View(lvl1_inp)
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl1_inp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl1_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_inp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_inp$row <- 1:nrow(lvl1_inp)
#turn dummy variable in a single factor
lvl1_inp$gender <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*3 + lvl1_inp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_inp$instrument <- factor(lvl2_inp$PCA*1 + lvl2_inp$IMCA*2 + lvl2_inp$GCA*3 + lvl2_inp$CINS*4 + lvl2_inp$GCIICS*5 + lvl2_inp$CCI*6 + lvl2_inp$FMCE*7 + lvl2_inp$BEMA*8 + lvl2_inp$FCI*9 + lvl2_inp$CSEM*10 + lvl2_inp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_inp$race <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*3 + lvl1_inp$american_indian*4 + lvl1_inp$hawaiian_or_other_pacific_islander*5 + lvl1_inp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_inp$race_URM <- factor(lvl1_inp$white*1 + lvl1_inp$black*2 + lvl1_inp$asian*2 + lvl1_inp$american_indian*2 + lvl1_inp$hawaiian_or_other_pacific_islander*2 + lvl1_inp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_inp$gender_URM <- factor(lvl1_inp$male*1 + lvl1_inp$female*2 + lvl1_inp$transgender*2 + lvl1_inp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_inp into lvl1_inp
lvl1_inp <- left_join(lvl1_inp, lvl2_inp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_inp <- lvl1_inp %>%
filter(Student.or.LA == 0)
#filter(PRE.score < 100 | PRE.score == NA)
#replace NA with calculated value (course average or MLR prediction)
boxplot(lvl1_inp$POST.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
lvl1_inp_po <- lvl1_inp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument))
summary(postpred)
NApost <- filter(lvl1_inp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_inp_po$row)
lvl1_inp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_inp_popre <- lvl1_inp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) #predicting the pre
summary(prepred)
NApre <- filter(lvl1_inp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_inp_popre$row)
lvl1_inp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_inp_ <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
lvl1_inp <- lvl1_inp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)
# filter(PRE.score < 100)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
lvl1_inp <- lvl1_inp %>%
filter(CohensD < 4 , CohensD > -1)%>%
filter(PRE.score < 100)
x <- lvl1_inp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_inp <- lvl1_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_inp <- lvl2_inp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_inp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
#Multiple Linear Regression by gender and race
dfit_inp_inst <- gls(CohensD ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_inp_inst)
LGindfit_inp_inst <- gls(LGind ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_inp_inst)
LGcoursefit_inp_inst <- gls(LGcourse ~ gender_URM + race_URM + instrument, data=na.omit(lvl1_inp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_inp_inst)
?gls
View(lvl1_inp)
boxplot(lvl1_inp$PRE.score ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
boxplot(lvl1_inp$CohensD ~ lvl1_inp$instrument) #check to see if boxes are taller than other boxes. If so, then create seperate postpreds. If not, include instrument in postpred.)
