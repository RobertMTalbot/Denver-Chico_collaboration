filter(Student.or.LA == 0)
library(Amelia)
lvl1_inptest <- lvl1_inp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, Year_in_school, gender, race, instrument)
bds <- matrix(c("PRE.score", "POST.score", 0, 0, 1, 1), nrow = 2, ncol = 3)
bds
View(lvl1_inptest)
bds <- matrix(c(2, 3, 0, 0, 1, 1), nrow = 2, ncol = 3)
bds
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
a.out <- Amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
library(Amelia)
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
install.packages("Amelia")
library(Amelia)
a.out <- amelia(lvl1_inptest, m = 5, p2s = 1, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
save(a.out, file ="lvl1_imps.RData")
load("~/Denver-Chico_collaboration/lvl1_imps.RData")
load("~/Denver-Chico_collaboration/lvl1_imps.RData")
lvl1_imp <- data.frame(a.out$imputations[[5]])
View(lvl1_imp)
lvl1_imp <- data.frame(a.out$imputations[[1]])
a.out <- amelia(lvl1_inptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp <- data.frame(a.out$imputations[[1]])
View(lvl1_inp)
View(lvl1_inptest)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_inptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp <- data.frame(a.out$imputations[[1]])
View(lvl1_imp)
lvl1_imp <- data.frame(a.out$imputations[[5]])
library(dplyr)
library(nlme)
lvl1_imp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_imp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_imp$row <- 1:nrow(lvl1_imp)
#turn dummy variable in a single factor
lvl1_imp$gender <- factor(lvl1_imp$male*1 + lvl1_imp$female*2 + lvl1_imp$transgender*3 + lvl1_imp$other*4, labels = c("NA", "male", "female", "transgender", "gender_other"))
lvl2_imp$instrument <- factor(lvl2_imp$PCA*1 + lvl2_imp$IMCA*2 + lvl2_imp$GCA*3 + lvl2_imp$CINS*4 + lvl2_imp$GCIICS*5 + lvl2_imp$CCI*6 + lvl2_imp$FMCE*7 + lvl2_imp$BEMA*8 + lvl2_imp$FCI*9 + lvl2_imp$CSEM*10 + lvl2_imp$LSCI*11, labels = c("PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI"))
lvl1_imp$race <- factor(lvl1_imp$white*1 + lvl1_imp$black*2 + lvl1_imp$asian*3 + lvl1_imp$american_indian*4 + lvl1_imp$hawaiian_or_other_pacific_islander*5 + lvl1_imp$other.1*6, labels = c("NA", "white", "black", "asian", "american_indian", "hawaiian_or_other_pacific_islander", "race_other"))
#white is Dom
lvl1_imp$race_URM <- factor(lvl1_imp$white*1 + lvl1_imp$black*2 + lvl1_imp$asian*2 + lvl1_imp$american_indian*2 + lvl1_imp$hawaiian_or_other_pacific_islander*2 + lvl1_imp$other.1*2, labels = c("NA", "Dom", "NonDom"))
#male is Dom
lvl1_imp$gender_URM <- factor(lvl1_imp$male*1 + lvl1_imp$female*2 + lvl1_imp$transgender*2 + lvl1_imp$other*2, labels = c("NA", "Dom", "NonDom"))
#Bring lvl2_imp into lvl1_imp
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_imp <- lvl1_imp %>%
filter(Student.or.LA == 0)
#filter(PRE.Duration..Seconds.>300 | PRE.Duration..Seconds.==NA)
#filter(PRE.score < 100 | PRE.score == NA)
#select variables we'll be using
variable.names(lvl1_imp)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, Year_in_school, gender, race, instrument)
#New imputation code
library(Amelia)
?amelia
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
bds
a.out <- amelia(lvl1_imptest, m = 5, idvars = c("Assessment_Sequence_ID", "gender", "race", "instrument"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp_po <- lvl1_imp
postpred <- gls(POST.score ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument))
NApost <- filter(lvl1_imp_po, is.na(POST.score) & !is.na(PRE.score)) #== is question, = is setting the value
matched <- match(NApost$row, lvl1_imp_po$row)
lvl1_imp_po$POST.score[matched] <- predict(postpred, newdata=NApost)
lvl1_imp_popre <- lvl1_imp_po
prepred <- gls(PRE.score ~ POST.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) #predicting the pre
NApre <- filter(lvl1_imp_popre, is.na(PRE.score) & !is.na(POST.score)) #== is question, = is setting the value
matched <- match(NApre$row, lvl1_imp_popre$row)
lvl1_imp_popre$PRE.score[matched] <- predict(prepred, newdata=NApre)
#Calculate Cohen's d, LGcourse, and LGind
lvl1_imp <- lvl1_imp_popre %>%
group_by(Assessment_Sequence_ID) %>%
select(Assessment_Sequence_ID, POST.score, PRE.score, row, instrument, gender_URM, race_URM, race, gender, PRE.Duration..Seconds., POST.Duration..Seconds.) %>%
na.omit() %>%
mutate(n1=length(PRE.score[!is.na(PRE.score)]),
n2=length(POST.score[!is.na(POST.score)]),
sd1=sd(PRE.score, na.rm=TRUE),
sd2=sd(POST.score, na.rm=TRUE),
CohensD=(POST.score-PRE.score)/sqrt(((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2)),
Preave=mean(PRE.score, na.rm = TRUE),
Postave=mean(POST.score, na.rm = TRUE),
LGcourse=(POST.score-PRE.score)/(100-Preave),
LGind=(POST.score-PRE.score)/(100-PRE.score))
# filter = things to keep
lvl1_imp <- lvl1_imp %>%
filter(CohensD < 4 , CohensD > -1)%>%
filter(PRE.score < 100)
#filter("PRE.Duration..Seconds." > 300)
#filter("POST.Duration..Seconds." > 300)
# "|" is an or, "," is an and
#filter(Instrument == 7 | Instrument == 8)
##filter(`Effect.size` > -2) # %>% # remove the previous # to add steps
## filter(FCI == 1, FMCE == 1) %>%
## filter(FMCE == 1)
## filter(numstudent > 10) %>%
#delete courses and students with <10 students (uses 2 datasets)
x <- lvl1_imp %>%
select(Assessment_Sequence_ID, CohensD) %>%
na.omit() %>%
group_by(Assessment_Sequence_ID) %>%
summarise(n=n()) %>%
filter(n > 10)
lvl1_imp <- lvl1_imp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
lvl2_imp <- lvl2_imp %>%
filter(Assessment_Sequence_ID %in% x$Assessment_Sequence_ID)
#Multiple Linear Regression by pre-score
dfit_imp_inst <- gls(CohensD ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(dfit_imp_inst)
LGindfit_imp_inst <- gls(LGind ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGindfit_imp_inst)
LGcoursefit_imp_inst <- gls(LGcourse ~ PRE.score + instrument, data=na.omit(lvl1_imp), weights=varIdent(form= ~1|instrument)) # controlling for instrument differences
summary(LGcoursefit_imp_inst)
#Multiple Linear Regression by gender and race
library(mvoutlier)
lvl1_3d <- lvl1_imp %>%
ungroup() %>%
select(CohensD,LGind,LGcourse)
thingiwant <- aq.plot(lvl1_3d, alpha=0.1, quan=0.9)
lvl1_imp$outliers <- thingiwant$outliers
library(rgl)
with(filter(lvl1_imp, LGind>-2), plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
class.n<-aggregate(PRE.score~Assessment_Sequence_ID, lvl1_inp,NROW)
class.mean<-aggregate(PRE.score~Assessment_Sequence_ID, lvl1_inp,mean)
class.sd<-aggregate(PRE.score~Assessment_Sequence_ID, lvl1_inp,sd)
#renames the columns so that they can be merged
colnames(class.n) <- c("Assessment_Sequence_ID","Nclasspre")
colnames(class.mean) <- c("Assessment_Sequence_ID","Meanclasspre")
colnames(class.sd) <- c("Assessment_Sequence_ID","SDclasspre")
#Combine Data sets
esdat<-merge(class.mean,class.n)
esdat<-merge(esdat,class.sd)
esdat<-merge(esdat,class.mean)
esdat<-merge(esdat,class.n)
esdat<-merge(esdat,class.sd)
### POST for class level data
#generate the columns
class.n<-aggregate(POST.score~Assessment_Sequence_ID, lvl1_inp,NROW)
class.mean<-aggregate(POST.score~Assessment_Sequence_ID, lvl1_inp,mean)
class.sd<-aggregate(POST.score~Assessment_Sequence_ID, lvl1_inp,sd)
#renames the columns so that they can be merged
colnames(class.n) <- c("Assessment_Sequence_ID","Nclasspost")
colnames(class.mean) <- c("Assessment_Sequence_ID","Meanclasspost")
colnames(class.sd) <- c("Assessment_Sequence_ID","SDclasspost")
#Combine Data sets
esdat<-merge(esdat,class.mean)
esdat<-merge(esdat,class.n)
esdat<-merge(esdat,class.sd)
esdat<-merge(esdat,class.mean)
esdat<-merge(esdat,class.n)
esdat<-merge(esdat,class.sd)
###for pre data
#selects female students and produces summary statistics in separate data sets
gender_URM_yes<-subset(lvl1_inp, gender_URM =="NonDom")
fem.n<-aggregate(PRE.score~Assessment_Sequence_ID, gender_URM_yes,NROW)
fem.mean<-aggregate(PRE.score~Assessment_Sequence_ID, gender_URM_yes,mean)
fem.sd<-aggregate(PRE.score~Assessment_Sequence_ID, gender_URM_yes,sd)
#renames the columns so that they can be merged
colnames(fem.n) <- c("Assessment_Sequence_ID","Nfempre")
colnames(fem.mean) <- c("Assessment_Sequence_ID","Meanfempre")
colnames(fem.sd) <- c("Assessment_Sequence_ID","SDfempre")
#selects male data and produces summary statistics in separate data sets
gender_URM_no<-subset(lvl1_inp, gender_URM =="Dom")
mal.n<-aggregate(PRE.score~Assessment_Sequence_ID,gender_URM_no,NROW)
mal.mean<-aggregate(PRE.score~Assessment_Sequence_ID,gender_URM_no,mean)
mal.sd<-aggregate(PRE.score~Assessment_Sequence_ID,gender_URM_no,sd)
#renames the columns so that they can be merged
colnames(mal.n) <- c("Assessment_Sequence_ID","Nmalpre")
colnames(mal.mean) <- c("Assessment_Sequence_ID","Meanmalpre")
colnames(mal.sd) <- c("Assessment_Sequence_ID","SDmalpre")
#Combine Data sets
esdat<-merge(esdat,fem.mean)
esdat<-merge(esdat,fem.n)
esdat<-merge(esdat,fem.sd)
esdat<-merge(esdat,mal.mean)
esdat<-merge(esdat,mal.n)
esdat<-merge(esdat,mal.sd)
###now to to the same things for the post test scores
#selects female students and produces summary statistics in separate data sets
fem.n<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_yes,NROW)
fem.mean<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_yes,mean)
fem.sd<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_yes,sd)
#renames the columns so that they can be merged
colnames(fem.n) <- c("Assessment_Sequence_ID","Nfempost")
colnames(fem.mean) <- c("Assessment_Sequence_ID","Meanfempost")
colnames(fem.sd) <- c("Assessment_Sequence_ID","SDfempost")
#selects male data and produces summary statistics in separate data sets
mal.n<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_no,NROW)
mal.mean<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_no,mean)
mal.sd<-aggregate(POST.score~Assessment_Sequence_ID, gender_URM_no,sd)
#renames the columns so that they can be merged
colnames(mal.n) <- c("Assessment_Sequence_ID","Nmalpost")
colnames(mal.mean) <- c("Assessment_Sequence_ID","Meanmalpost")
colnames(mal.sd) <- c("Assessment_Sequence_ID","SDmalpost")
###Calclating the LGind
LGind.class<-aggregate(LGind~Assessment_Sequence_ID, lvl1_inp,mean)
LGind.class.fem<-aggregate(LGind~Assessment_Sequence_ID,gender_URM_yes,mean)
LGind.class.mal<-aggregate(LGind~Assessment_Sequence_ID,gender_URM_no,mean)
colnames(LGind.class) <- c("Assessment_Sequence_ID","LGindclass")
colnames(LGind.class.fem) <- c("Assessment_Sequence_ID","LGindclassfem")
colnames(LGind.class.mal) <- c("Assessment_Sequence_ID","LGindclassmal")
#Combine Data sets
esdat<-merge(esdat,fem.mean)
esdat<-merge(esdat,fem.n)
esdat<-merge(esdat,fem.sd)
esdat<-merge(esdat,mal.mean)
esdat<-merge(esdat,mal.n)
esdat<-merge(esdat,mal.sd)
esdat<-merge(esdat,LGind.class)
esdat<-merge(esdat,LGind.class.fem)
esdatafinal<-merge(esdat,LGind.class.mal)
###Calculating effect sizes
#by class
esdatafinal$d.class<-with(esdatafinal,{(Meanclasspost-Meanclasspre)/sqrt(((Nclasspre-1)*SDclasspre^2 + (Nclasspost-1)*SDclasspost^2)/(Nclasspre+Nclasspost-2))})
esdatafinal$LGC.class<-with(esdatafinal,{(Meanclasspost-Meanclasspre)/(100-Meanclasspre)})
#cohen's d between genders
esdatafinal$d.mvf.pre<-((esdatafinal$Meanmalpre-esdatafinal$Meanfempre)/sqrt(((esdatafinal$Nfempre-1)*esdatafinal$SDfempre^2 + (esdatafinal$Nmalpre-1)*esdatafinal$SDmalpre^2)/(esdatafinal$Nmalpre+esdatafinal$Nfempre-2)))
esdatafinal$d.mvf.post<-((esdatafinal$Meanmalpost-esdatafinal$Meanfempost)/sqrt(((esdatafinal$Nfempost-1)*esdatafinal$SDfempost^2 + (esdatafinal$Nmalpost-1)*esdatafinal$SDmalpost^2)/(esdatafinal$Nmalpost+esdatafinal$Nfempost-2)))
#Cohen's d on genders
esdatafinal$d.mal<-((esdatafinal$Meanmalpost-esdatafinal$Meanmalpre)/sqrt(((esdatafinal$Nmalpre-1)*esdatafinal$SDmalpre^2 + (esdatafinal$Nmalpost-1)*esdatafinal$SDmalpost^2)/(esdatafinal$Nmalpre+esdatafinal$Nmalpost-2)))
esdatafinal$d.fem<-((esdatafinal$Meanfempost-esdatafinal$Meanfempre)/sqrt(((esdatafinal$Nfempre-1)*esdatafinal$SDfempre^2 + (esdatafinal$Nfempost-1)*esdatafinal$SDfempost^2)/(esdatafinal$Nfempre+esdatafinal$Nfempost-2)))
#LGcourse on genders
esdatafinal$LGcourse.mal<-(esdatafinal$Meanmalpost-esdatafinal$Meanmalpre)/(100-esdatafinal$Meanmalpre)
esdatafinal$LGcourse.fem<-(esdatafinal$Meanfempost-esdatafinal$Meanfempre)/(100-esdatafinal$Meanfempre)
####Merge the two data files and save the data file
eslvl2imp<-merge(esdatafinal,lvl2_inp,by="Assessment_Sequence_ID")
save(eslvl2imp,file="/Users/kerstin/Documents/LA Postdoc stuff/RData/LASSO/Analysis/eslvl2imp")
library(dplyr)
library(nlme)
library(rgl)
with(filter(lvl1_imp, LGind>-2), plot3d(LGind, LGcourse, CohensD, col=factor(outliers, labels=c(1,2))))
?amelia
library(Amelia)
?amelia
bds
View(lvl2_inp)
View(lvl1_imp)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, gender, race, instrument, PCA, IMCA, GCA, CINS, GCIICS, CCI, FMCE, BEMA, FCI, CSEM, LSCI)
lvl1_imp <- read.csv("/Users/bvd/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl1_imp <- read.csv("/Users/bvandusen/Denver-Chico_collaboration/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl1_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_imp$row <- 1:nrow(lvl1_imp)
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_imp$row <- 1:nrow(lvl1_imp)
#Bring lvl2_imp into lvl1_imp
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
lvl1_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_imp$row <- 1:nrow(lvl1_imp)
#Bring lvl2_imp into lvl1_imp
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
library(dplyr)
library(nlme)
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "instrument")], by = "Assessment_Sequence_ID")
View(lvl2_imp)
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "PCA", "IMCA", "GCA", "CINS", "GCIICS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI")], by = "Assessment_Sequence_ID")
View(lvl1_imp)
#filter for students
lvl1_imp <- lvl1_imp %>%
filter(Student.or.LA == 0)
#filter(PRE.Duration..Seconds.>300 | PRE.Duration..Seconds.==NA)
#filter(PRE.score < 100 | PRE.score == NA)
#select variables we'll be using
variable.names(lvl1_imp)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, gender, race, instrument, PCA, IMCA, GCA, CINS,
GCIICS, CCI, FMCE, BEMA, FCI, CSEM, LSCI)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS,
GCIICS, CCI, FMCE, BEMA, FCI, CSEM, LSCI)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
bds
a.out <- amelia(lvl1_imptest, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp1 <- data.frame(a.out$imputations[[1]])
a.out <- amelia(lvl1_imptest, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2_imp <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1_imp$row <- 1:nrow(lvl1_imp)
#Bring lvl2_imp into lvl1_imp
lvl1_imp <- left_join(lvl1_imp, lvl2_imp[,c("Assessment_Sequence_ID", "PCA", "IMCA", "GCA", "CINS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_imp <- lvl1_imp %>%
filter(Student.or.LA == 0)
#filter(PRE.Duration..Seconds.>300 | PRE.Duration..Seconds.==NA)
#filter(PRE.score < 100 | PRE.score == NA)
#select variables we'll be using
variable.names(lvl1_imp)
lvl1_imptest <- lvl1_imp %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI)
#New imputation code
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_imptest, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp1 <- data.frame(a.out$imputations[[1]])
lvl1_imp2 <- data.frame(a.out$imputations[[2]])
lvl1_imp3 <- data.frame(a.out$imputations[[3]])
lvl1_imp4 <- data.frame(a.out$imputations[[4]])
lvl1_imp5 <- data.frame(a.out$imputations[[5]])
View(lvl1_imp1)
lvl1 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1$row <- 1:nrow(lvl1)
#Bring lvl2_imp into lvl1_imp
lvl1 <- left_join(lvl1, lvl2[,c("Assessment_Sequence_ID", "PCA", "IMCA", "GCA", "CINS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI")], by = "Assessment_Sequence_ID")
#filter for students
lvl1 <- lvl1 %>%
filter(Student.or.LA == 0)
#filter(PRE.Duration..Seconds.>300 | PRE.Duration..Seconds.==NA)
#filter(PRE.score < 100 | PRE.score == NA)
#select variables we'll be using
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI)
#New imputation code
library(Amelia)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
View(lvl1_imp2)
with(lvl1_imp1, plot(PRE.score, Post.score)
with(lvl1_imp1, plot(PRE.score, Post.score)
?with
with(lvl1_imp1, plot(PRE.score, Post.score))
with(lvl1_imp1, plot(PRE.score, POST.score))
with(lvl1_imp2, plot(PRE.score, POST.score))
with(lvl1_imp3, plot(PRE.score, POST.score))
with(lvl1_imp4, plot(PRE.score, POST.score))
with(lvl1_imp5, plot(PRE.score, POST.score))
with(lvl1_imp1, cor(PRE.score,POST.score)
with(lvl1_imp1, cor(PRE.score,POST.score))
with(lvl1_imp2, cor(PRE.score,POST.score))
with(lvl1_imp3, cor(PRE.score,POST.score))
with(lvl1_imp4, cor(PRE.score,POST.score))
with(lvl1_imp5, cor(PRE.score,POST.score))
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI, male, female)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_imp1 <- data.frame(a.out$imputations[[1]])
lvl1_imp2 <- data.frame(a.out$imputations[[2]])
lvl1_imp3 <- data.frame(a.out$imputations[[3]])
lvl1_imp4 <- data.frame(a.out$imputations[[4]])
lvl1_imp5 <- data.frame(a.out$imputations[[5]])
with(lvl1_imp1, cor(PRE.score,POST.score))
with(lvl1_imp2, cor(PRE.score,POST.score))
with(lvl1_imp3, cor(PRE.score,POST.score))
with(lvl1_imp4, cor(PRE.score,POST.score))
with(lvl1_imp5, cor(PRE.score,POST.score))
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI, male, female, Hispanic, black, white, asian)
variable.names(lvl1)
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, transgender, other, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander, other.1)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, other, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander, other.1)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID"),
noms = NULL, ords = "Year_in_school", bounds = bds)
View(lvl1_imp)
with(lvl1_imp1, cor(PRE.score,POST.score))
with(lvl1_imp2, cor(PRE.score,POST.score))
with(lvl1_imp3, cor(PRE.score,POST.score))
with(lvl1_imp4, cor(PRE.score,POST.score))
with(lvl1_imp5, cor(PRE.score,POST.score))
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
noms = NULL, ords = "Year_in_school", bounds = bds)
lvl1 <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(lvl1, is.na(POST.score) & is.na(PRE.score))
lvl1filter <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(is.na(POST.score) & is.na(PRE.score))
View(lvl1)
View(lvl1filter)
lvl1filter <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(!is.na(POST.score) & !is.na(PRE.score))
View(lvl1filter)
lvl1filter <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(!is.na(POST.score) | !is.na(PRE.score))
View(lvl1filter)
lvl1 <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(!is.na(POST.score) | !is.na(PRE.score))
lvl1_cut <- lvl1 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, other, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander, other.1)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
noms = NULL, ords = "Year_in_school", bounds = bds)
View(lvl1_cut)
View(lvl1)
View(lvl1_cut)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
bds <- matrix(c(2, 3, 0, 0, 100, 100), nrow = 2, ncol = 3)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
lvl1 <- lvl1 %>%
lvl1 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
#Assign row numbers
lvl1$row <- 1:nrow(lvl1)
#Bring lvl2_imp into lvl1_imp
lvl1 <- left_join(lvl1, lvl2[,c("Assessment_Sequence_ID", "PCA", "IMCA", "GCA", "CINS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI")], by = "Assessment_Sequence_ID")
#filter for students
lvl1_filt <- lvl1 %>%
filter(Student.or.LA == 0)
lvl1_cut <- lvl1_filt %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, other, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander, other.1)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
lvl1_cut <- lvl1_filt %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander)
View(lvl1_filt)
View(lvl1)
lvl1 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl1.csv")
lvl2 <- read.csv("/Users/bvandusen/Dropbox/work/Research/LASSO/data/HLM_LASSO_Dump_S2_S3_lvl2.csv")
View(lvl1)
#Assign row numbers
lvl1$row <- 1:nrow(lvl1)
#Bring lvl2_imp into lvl1_imp
lvl1 <- left_join(lvl1, lvl2[,c("Assessment_Sequence_ID", "PCA", "IMCA", "GCA", "CINS", "CCI", "FMCE", "BEMA", "FCI", "CSEM", "LSCI")], by = "Assessment_Sequence_ID")
lvl1_filt <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(!is.na(POST.score) | !is.na(PRE.score))
variable.names(lvl1)
lvl1_cut <- lvl1_filt %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
lvl1_filt <- lvl1 %>%
filter(Student.or.LA == 0)
lvl1_cut <- lvl1_filt %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
View(lvl1_filt)
lvl1_filt2 <- lvl1 %>%
filter(Student.or.LA == 0) %>%
filter(!is.na(POST.score) | !is.na(PRE.score))
View(lvl1_filt)
View(lvl1_filt2)
lvl1_cut2 <- lvl1_filt2 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander)
a.out <- amelia(lvl1_cut2, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
lvl1_filt2 <- lvl1 %>%
filter(Student.or.LA == 0)
lvl1_cut2 <- lvl1_filt2 %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
lvl1_cut <- lvl1_filt %>%
select(Assessment_Sequence_ID, PRE.score, POST.score, First_time, row,
Year_in_school, PCA, IMCA, GCA, CINS, CCI, FMCE, BEMA, FCI, CSEM, LSCI,
male, female, Hispanic, black, white, asian, american_indian,hawaiian_or_other_pacific_islander)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
a.out <- amelia(lvl1_cut, m = 5, idvars = c("Assessment_Sequence_ID", "row"),
ords = "Year_in_school", bounds = bds)
lvl1_imp1 <- data.frame(a.out$imputations[[1]])
lvl1_imp2 <- data.frame(a.out$imputations[[2]])
lvl1_imp3 <- data.frame(a.out$imputations[[3]])
lvl1_imp4 <- data.frame(a.out$imputations[[4]])
lvl1_imp5 <- data.frame(a.out$imputations[[5]])
with(lvl1_imp1, cor(PRE.score,POST.score))
with(lvl1_imp2, cor(PRE.score,POST.score))
with(lvl1_imp3, cor(PRE.score,POST.score))
with(lvl1_imp4, cor(PRE.score,POST.score))
with(lvl1_imp5, cor(PRE.score,POST.score))
